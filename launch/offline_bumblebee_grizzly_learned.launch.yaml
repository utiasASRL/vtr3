## Offline Stereo Camera VTR3 (using datasets)

session_name: vtr_offline_bumblebee_grizzly_learned_feature


environment:
  CYCLONEDDS_URI: ${VTRSRC}/config/cyclonedds.default.xml # custom dds configs
  # ROS_DOMAIN_ID: "1"  # set this to a unique number when multiple ROS2 dependent system running on the same network

start_directory: ${VTRTEMP}

suppress_history: false

windows:
  - window_name: vtr_navigation_system
    layout: main-vertical
    shell_command_before:
      - source ${VTRSRC}/main/install/setup.bash
    panes:
      - >
        ros2 launch vtr_navigation vtr.launch.py
        base_params:=bumblebee_grizzly_default.yaml
        override_params:=bumblebee_grizzly_learned_features.yaml
        data_dir:=${VTRTEMP}/vision_learned_feature
        start_new_graph:=true
        use_sim_time:=true
        path_planning.type:=stationary

      # - ros2 run vtr_mission_planning vtr_mission.py --help # backup way to send commands if UI not working
      # - htop
      # - sleep 5 && ros2 run rviz2 rviz2 -d ${VTRSRC}/rviz/camera.rviz
      # - source ${VTRSRC}/extra/install/setup.bash


  - window_name: vtr_gui
    layout: main-horizontal
    shell_command_before:
      - source ${VTRSRC}/main/install/setup.bash
    panes:
      - ros2 run vtr_gui socket_client  --ros-args -r __ns:=/vtr
      - ros2 run vtr_gui socket_server  --ros-args -r __ns:=/vtr
      - ros2 run vtr_gui web_server  --ros-args -r __ns:=/vtr
      # - firefox --new-window "localhost:5200" # the webpage has to wait for everything above

  # - window_name: rviz2
  #   layout: main-horizontal
  #   shell_command_before:
  #     - source /opt/ros/humble/setup.bash
  #   panes:
      # - ros2 run rviz2 rviz2 -d ${VTRSRC}/rviz/lidar.rviz
      # - ros2 run rqt_reconfigure rqt_reconfigure
