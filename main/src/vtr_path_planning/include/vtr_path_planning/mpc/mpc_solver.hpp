/* This file was automatically generated by CasADi 3.6.5.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

extern "C" int nlp(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_alloc_mem(void);
extern "C" int nlp_init_mem(int mem);
extern "C" void nlp_free_mem(int mem);
extern "C" int nlp_checkout(void);
extern "C" void nlp_release(int mem);
extern "C" void nlp_incref(void);
extern "C" void nlp_decref(void);
extern "C" casadi_int nlp_n_in(void);
extern "C" casadi_int nlp_n_out(void);
extern "C" casadi_real nlp_default_in(casadi_int i);
extern "C" const char* nlp_name_in(casadi_int i);
extern "C" const char* nlp_name_out(casadi_int i);
extern "C" const casadi_int* nlp_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_sparsity_out(casadi_int i);
extern "C" int nlp_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_SZ_ARG 2
#define nlp_SZ_RES 2
#define nlp_SZ_IW 0
#define nlp_SZ_W 138
extern "C" int nlp_f(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_f_alloc_mem(void);
extern "C" int nlp_f_init_mem(int mem);
extern "C" void nlp_f_free_mem(int mem);
extern "C" int nlp_f_checkout(void);
extern "C" void nlp_f_release(int mem);
extern "C" void nlp_f_incref(void);
extern "C" void nlp_f_decref(void);
extern "C" casadi_int nlp_f_n_in(void);
extern "C" casadi_int nlp_f_n_out(void);
extern "C" casadi_real nlp_f_default_in(casadi_int i);
extern "C" const char* nlp_f_name_in(casadi_int i);
extern "C" const char* nlp_f_name_out(casadi_int i);
extern "C" const casadi_int* nlp_f_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_f_sparsity_out(casadi_int i);
extern "C" int nlp_f_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_f_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_f_SZ_ARG 2
#define nlp_f_SZ_RES 1
#define nlp_f_SZ_IW 0
#define nlp_f_SZ_W 37
extern "C" int nlp_g(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_g_alloc_mem(void);
extern "C" int nlp_g_init_mem(int mem);
extern "C" void nlp_g_free_mem(int mem);
extern "C" int nlp_g_checkout(void);
extern "C" void nlp_g_release(int mem);
extern "C" void nlp_g_incref(void);
extern "C" void nlp_g_decref(void);
extern "C" casadi_int nlp_g_n_in(void);
extern "C" casadi_int nlp_g_n_out(void);
extern "C" casadi_real nlp_g_default_in(casadi_int i);
extern "C" const char* nlp_g_name_in(casadi_int i);
extern "C" const char* nlp_g_name_out(casadi_int i);
extern "C" const casadi_int* nlp_g_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_g_sparsity_out(casadi_int i);
extern "C" int nlp_g_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_g_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_g_SZ_ARG 2
#define nlp_g_SZ_RES 1
#define nlp_g_SZ_IW 0
#define nlp_g_SZ_W 47
extern "C" int nlp_grad(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_grad_alloc_mem(void);
extern "C" int nlp_grad_init_mem(int mem);
extern "C" void nlp_grad_free_mem(int mem);
extern "C" int nlp_grad_checkout(void);
extern "C" void nlp_grad_release(int mem);
extern "C" void nlp_grad_incref(void);
extern "C" void nlp_grad_decref(void);
extern "C" casadi_int nlp_grad_n_in(void);
extern "C" casadi_int nlp_grad_n_out(void);
extern "C" casadi_real nlp_grad_default_in(casadi_int i);
extern "C" const char* nlp_grad_name_in(casadi_int i);
extern "C" const char* nlp_grad_name_out(casadi_int i);
extern "C" const casadi_int* nlp_grad_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_grad_sparsity_out(casadi_int i);
extern "C" int nlp_grad_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_grad_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_grad_SZ_ARG 4
#define nlp_grad_SZ_RES 4
#define nlp_grad_SZ_IW 0
#define nlp_grad_SZ_W 896
extern "C" int nlp_grad_f(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_grad_f_alloc_mem(void);
extern "C" int nlp_grad_f_init_mem(int mem);
extern "C" void nlp_grad_f_free_mem(int mem);
extern "C" int nlp_grad_f_checkout(void);
extern "C" void nlp_grad_f_release(int mem);
extern "C" void nlp_grad_f_incref(void);
extern "C" void nlp_grad_f_decref(void);
extern "C" casadi_int nlp_grad_f_n_in(void);
extern "C" casadi_int nlp_grad_f_n_out(void);
extern "C" casadi_real nlp_grad_f_default_in(casadi_int i);
extern "C" const char* nlp_grad_f_name_in(casadi_int i);
extern "C" const char* nlp_grad_f_name_out(casadi_int i);
extern "C" const casadi_int* nlp_grad_f_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_grad_f_sparsity_out(casadi_int i);
extern "C" int nlp_grad_f_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_grad_f_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_grad_f_SZ_ARG 2
#define nlp_grad_f_SZ_RES 2
#define nlp_grad_f_SZ_IW 0
#define nlp_grad_f_SZ_W 394
extern "C" int nlp_hess_l(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_hess_l_alloc_mem(void);
extern "C" int nlp_hess_l_init_mem(int mem);
extern "C" void nlp_hess_l_free_mem(int mem);
extern "C" int nlp_hess_l_checkout(void);
extern "C" void nlp_hess_l_release(int mem);
extern "C" void nlp_hess_l_incref(void);
extern "C" void nlp_hess_l_decref(void);
extern "C" casadi_int nlp_hess_l_n_in(void);
extern "C" casadi_int nlp_hess_l_n_out(void);
extern "C" casadi_real nlp_hess_l_default_in(casadi_int i);
extern "C" const char* nlp_hess_l_name_in(casadi_int i);
extern "C" const char* nlp_hess_l_name_out(casadi_int i);
extern "C" const casadi_int* nlp_hess_l_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_hess_l_sparsity_out(casadi_int i);
extern "C" int nlp_hess_l_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_hess_l_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_hess_l_SZ_ARG 4
#define nlp_hess_l_SZ_RES 1
#define nlp_hess_l_SZ_IW 0
#define nlp_hess_l_SZ_W 826
extern "C" int nlp_jac_g(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int nlp_jac_g_alloc_mem(void);
extern "C" int nlp_jac_g_init_mem(int mem);
extern "C" void nlp_jac_g_free_mem(int mem);
extern "C" int nlp_jac_g_checkout(void);
extern "C" void nlp_jac_g_release(int mem);
extern "C" void nlp_jac_g_incref(void);
extern "C" void nlp_jac_g_decref(void);
extern "C" casadi_int nlp_jac_g_n_in(void);
extern "C" casadi_int nlp_jac_g_n_out(void);
extern "C" casadi_real nlp_jac_g_default_in(casadi_int i);
extern "C" const char* nlp_jac_g_name_in(casadi_int i);
extern "C" const char* nlp_jac_g_name_out(casadi_int i);
extern "C" const casadi_int* nlp_jac_g_sparsity_in(casadi_int i);
extern "C" const casadi_int* nlp_jac_g_sparsity_out(casadi_int i);
extern "C" int nlp_jac_g_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int nlp_jac_g_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define nlp_jac_g_SZ_ARG 2
#define nlp_jac_g_SZ_RES 2
#define nlp_jac_g_SZ_IW 0
#define nlp_jac_g_SZ_W 369
