/**:
  ros__parameters:
    log_to_file: true
    log_debug: true
    log_enabled:
        # navigator
        #- navigation
        #- navigation.graph_map_server
      #- navigation.command
    
        # tactic
      #- tactic
      #- tactic.pipeline
#      - tactic.eop
      - tactic.module
      #- tactic.module.live_mem_manager
      #- tactic.module.graph_mem_manager

      # path planner
      - path_planning
      - path_planning.cbit
      - path_planning.cbit_planner
      - cbit.path_planning
      - cbit_planner.path_planning
      - cbit.debug
      - mpc.solver
      - mpc.speed_scheduler
      - mpc.cost_function
      - mpc.cbit
      - mpc.debug
      - cbit.control
      #- obstacle detection.cbit
      #- grizzly_controller_tests.cbit
      #- ouster
        
        # mission planner
      #- mission.server
      #- mission.state_machine

        # pose graph
      #- pose_graph

        # lidar pipeline
      #- lidar.pipeline
      #- lidar.preprocessing
      #- lidar.ouster_converter
      #- lidar.odometry_icp
      #- lidar.odometry_map_maintenance
      #- lidar.vertex_test
      #- lidar.localization_map_recall
      #- lidar.localization_icp
      #- lidar.intra_exp_merging
      #- lidar.dynamic_detection
      #- lidar.inter_exp_merging
      #- lidar.ground_extraction
      #- lidar.obstacle_detection
      #- lidar.terrain_assessment

    robot_frame: back_wheels_link
    env_info_topic: env_info
    lidar_frame: os1_lidar
    lidar_topic: /ouster1/points
    queue_size: 1
    graph_projection:
      origin_lat: 45.518046
      origin_lng: -73.393744
      origin_theta: 1.3
      scale: 1.0
    tactic:
      enable_parallelization: true
      preprocessing_skippable: false
      odometry_mapping_skippable: false
      localization_skippable: true
      task_queue_num_threads: 1
      task_queue_size: -1

      route_completion_translation_threshold: 0.2
      route_completion_angle_threshold: 0.1

      chain:
        min_cusp_distance: 0.1
        angle_weight: 1.0
        search_depth: 5
        search_back_depth: 10
        distance_warning: 5.0
        alpha: 1.0
      save_odometry_result: true
      save_localization_result: true
      visualize: true
      rviz_loc_path_offset:
        - 0.0
        - 0.0
        - 0.0
    pipeline:
      type: lidar
      preprocessing:
        - conversion
        - filtering
      odometry:
        - icp
        - mapping
        - vertex_test
        - memory
      localization:
        - recall
        - icp
        - memory
      submap_translation_threshold: 1.5
      submap_rotation_threshold: 30.0
    preprocessing:
      conversion:
        type: lidar.ouster_converter
        visualize: false
        filter_warthog: true
        filter_z_min: -0.5
        filter_z_max: 0.5
        filter_radius: 1.5
        
        radius_filter: 0.05
      filtering:
        type: lidar.preprocessing
        num_threads: 8
        crop_range: 40.0

        frame_voxel_size: 0.3 # grid subsampling voxel size

        vertical_angle_res: 0.0061365 # vertical angle resolution in radians, equal to 0.3516 degree documented in the manual
        polar_r_scale: 2.0 # polar_r_scale x vertical_angle_res = nearest neighbor search radius for normal computation
        r_scale: 4.0 # scale down point range by this value after taking log, whatever works
        h_scale: 2.0 # scale down yaw(phi) by this value so that vertical resolution ~= horizontal resolution, horizontal resolution when 5Hz spin frequence is ~0.7031 degree, so 0.7031 / 0.3516 = 2.00

        num_sample1: 8000 # max number of sample after filtering based on planarity
        min_norm_score1: 0.95 # min planarity score

        num_sample2: 8000 # max number of sample after filtering based on planarity
        min_norm_score2: 0.2 # 0.2 is when the incident angle 5/12 * pi
        min_normal_estimate_dist: 1.0 # minimum distance to estimate normal in meters
        max_normal_estimate_angle: 0.44 # must <1/2, this value will be timed by M_PI

        cluster_num_sample: 8000 # maxnumber of sample after removing isolated points

        visualize: true
    odometry:
      icp:
        type: lidar.odometry_icp

        # continuous time estimation
        use_trajectory_estimation: false
        traj_num_extra_states: 0
        traj_lock_prev_pose: false
        traj_lock_prev_vel: false
        traj_qc_diag:
          - 1.0
          - 0.1
          - 0.1
          - 0.1
          - 0.1
          - 1.0
        num_threads: 8
        first_num_steps: 2
        initial_max_iter: 4
        initial_max_pairing_dist: 1.5
        initial_max_planar_dist: 1.0
        refined_max_iter: 50
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3
        averaging_num_steps: 2
        verbose: false
        max_iterations: 1
        min_matched_ratio: 0.85
        visualize: true
      mapping:
        type: lidar.odometry_map_maintenance_v2

        map_voxel_size: 0.3

        crop_range_front: 40.0
        back_over_front_ratio: 0.5
        point_life_time: 20.0
        visualize: false
      vertex_test:
        type: lidar.vertex_test

        max_translation: 0.30
        max_rotation: 10.0
      intra_exp_merging:
        type: lidar.intra_exp_merging_v2
        depth: 6.0

        map_voxel_size: 0.3

        crop_range_front: 40.0
        back_over_front_ratio: 0.5
        visualize: true
      inter_exp_merging:
        type: "lidar.inter_exp_merging_v2"

        map_voxel_size: 0.3
        max_num_experiences: 128
        distance_threshold: 0.6
        planar_threshold: 0.2
        normal_threshold: 0.8
        dynamic_obs_threshold: 1
        visualize: true
      memory:
        type: live_mem_manager
        window_size: 5
    localization:
      recall:
        type: lidar.localization_map_recall
        map_version: pointmap
        visualize: true
      icp:
        type: lidar.localization_icp
        use_pose_prior: true
        num_threads: 8
        first_num_steps: 2
        initial_max_iter: 4
        initial_max_pairing_dist: 1.5
        initial_max_planar_dist: 1.0
        refined_max_iter: 50
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3
        averaging_num_steps: 2
        verbose: false
        max_iterations: 1
        min_matched_ratio: 0.45

      memory:
        type: graph_mem_manager
        vertex_life_span: 5
        window_size: 3
    
    path_planning:
      type: bicycle_mpc
      control_period: 100
      speed_scheduler:
        planar_curv_weight: 0.0
        profile_curv_weight: 0.0 
        eop_weight: 2.0
        min_vel: 0.3

      mpc:
        # Controller Params
        extrapolate_robot_pose: true
        mpc_verbosity: false
        forward_vel: 0.5
        max_lin_vel: 0.75
        max_ang_vel: 0.454
        max_ang_acc: 0.149
        max_lin_acc: 0.3
        vehicle_model: "bicycle"
        wheelbase: 1.83
        recovery_steps: 15
        failure_threshold: 5

        # Tunable controller parameters(Currently only works for the Bicycle)
        forward:
          q_lat: 15.0
          q_lon: 4.0
          q_th: 5.0
          r1: 0.1
          r2: 1.0
          racc1: 4.5
          racc2: 7.0
          q_f: 1.0 # Multiplier for terminal cost
        reverse:
          q_lat: 15.0
          q_lon: 4.0
          q_th: 2.0
          r1: 8.0
          r2: 0.0
          racc1: 12.5
          racc2: 2.0
          q_f: 0.0 # Multiplier for terminal cost
